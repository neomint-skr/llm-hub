# LLM Hub Production Environment Configuration
# Copy this file to .env and customize for your production deployment

# =============================================================================
# SECURITY SETTINGS (CRITICAL - MUST BE CHANGED)
# =============================================================================

# API Key for authentication (CHANGE THIS!)
# Generate with: openssl rand -hex 32
API_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_KEY_32_CHARACTERS_OR_MORE

# Enable authentication (MUST be true in production)
AUTH_ENABLED=true

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Gateway service port (public endpoint)
GATEWAY_PORT=8080

# Bridge service port (internal)
MCP_PORT=3000

# LM Studio connection URL
# Use host.docker.internal for Docker Desktop on Windows/Mac
# Use actual IP address for native Docker on Linux
LM_STUDIO_URL=http://host.docker.internal:1234

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Rate limiting (requests per minute per API key)
# Adjust based on your expected load
RATE_LIMIT_PER_MINUTE=60

# Model discovery polling interval (seconds)
# Lower values = more frequent checks but higher CPU usage
POLL_INTERVAL=30

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level (ERROR, WARNING, INFO, DEBUG)
# Use INFO or WARNING in production
LOG_LEVEL=INFO

# Log directory (for persistent logs)
LOG_DIR=./logs

# Data directory (for persistent data)
DATA_DIR=./data

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker image version to deploy
# Use specific version tags in production (e.g., v1.0.0)
VERSION=v1.0.0

# Service names (usually don't need to change)
SERVICE_NAME_GATEWAY=unified-gateway
SERVICE_NAME_BRIDGE=lm-studio-bridge

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Docker network subnet (change if conflicts with existing networks)
NETWORK_SUBNET=172.20.0.0/16

# =============================================================================
# SSL/TLS CONFIGURATION (if using nginx reverse proxy)
# =============================================================================

# SSL certificate paths (uncomment and configure if using HTTPS)
# SSL_CERT_PATH=./ssl/cert.pem
# SSL_KEY_PATH=./ssl/key.pem

# =============================================================================
# MONITORING CONFIGURATION (optional)
# =============================================================================

# Enable Prometheus monitoring
ENABLE_MONITORING=false

# Prometheus port
PROMETHEUS_PORT=9090

# Enable log aggregation with Fluentd
ENABLE_LOG_AGGREGATION=false

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup directory for persistent data
BACKUP_DIR=./backups

# Backup retention (days)
BACKUP_RETENTION_DAYS=30

# =============================================================================
# RESOURCE LIMITS
# =============================================================================

# Gateway resource limits
GATEWAY_MEMORY_LIMIT=512M
GATEWAY_CPU_LIMIT=0.5

# Bridge resource limits
BRIDGE_MEMORY_LIMIT=256M
BRIDGE_CPU_LIMIT=0.25

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================

# Health check intervals (seconds)
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================

# Before deploying to production, ensure:
# [ ] API_KEY is changed to a secure random value
# [ ] AUTH_ENABLED is set to true
# [ ] LOG_LEVEL is set to INFO or WARNING
# [ ] VERSION is set to a specific release tag
# [ ] SSL certificates are configured (if using HTTPS)
# [ ] Firewall rules are configured
# [ ] Log rotation is set up
# [ ] Monitoring is configured
# [ ] Backup strategy is implemented
# [ ] Resource limits are appropriate for your hardware
# [ ] Network configuration doesn't conflict with existing infrastructure

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit this file with real credentials to version control
# 2. Use strong, randomly generated API keys
# 3. Regularly rotate API keys
# 4. Monitor logs for suspicious activity
# 5. Keep Docker images updated
# 6. Use HTTPS in production
# 7. Restrict network access to necessary ports only
# 8. Regular security audits and updates

# =============================================================================
# PERFORMANCE TUNING NOTES
# =============================================================================

# For high-traffic deployments:
# - Increase RATE_LIMIT_PER_MINUTE
# - Decrease POLL_INTERVAL for faster model discovery
# - Increase resource limits
# - Consider horizontal scaling

# For resource-constrained deployments:
# - Decrease RATE_LIMIT_PER_MINUTE
# - Increase POLL_INTERVAL
# - Decrease resource limits
# - Use WARNING or ERROR log level
